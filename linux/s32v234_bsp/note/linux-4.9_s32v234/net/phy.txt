

├── drivers
│   ├── net
│   │   ├── ethernet
│   │   │   ├── freescale
│   │   │       ├── fec_main.o
│   │   │       ├── fec.o
│   │   │       └── fec_ptp.o
│   │   ├── phy
│   │   │   ├── bcm7xxx.o
│   │   │   ├── bcm87xx.o
│   │   │   ├── bcm89xxx.o
│   │   │   ├── broadcom.o
│   │   │   ├── fixed_phy.o
│   │   │   ├── libphy.o
│   │   │   ├── mdio_bus.o
│   │   │   ├── micrel.o
│   │   │   ├── nxp
│   │   │   │   ├── nxp.ko
│   │   │   │   └── nxp.o
│   │   │   ├── phy_device.o
│   │   │   └── phy.o

==============================
drivers/net/
phy/phy.c
phy/phy_device.c
phy/micrel.c
phy/mdio_bus.c

----------------
phy/phy_device.c
* Framework for finding and configuring PHYs.
* Also contains generic PHY driver

subsys_initcall(phy_init);
                   |
+------------------+
|
|-> mdio_bus_init
|-> phy_drivers_register

-------------
mdio_bus_init //mdio_bus.c
|-> class_register(&mdio_bus_class);
|-> bus_register(&mdio_bus_type);

================================
static struct phy_driver genphy_driver[] = {
	{
		...
	 // Called to initialize the PHY,
	 // including after a reset
	.config_init	= genphy_config_init,
		...
	},
	{
	}

};

-----------


phy_init_hw //phy/phy_device.c
|-> phydev->drv->soft_reset(phydev);
|-> phy_scan_fixups(phydev);
|-> phydev->drv->config_init(phydev);

========================================

