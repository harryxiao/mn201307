commit 6f38756649369215d905175058bcd09deb9c0a29
Author: ning.ma <ning.ma@roadefend.com>
Date:   Wed May 16 18:24:07 2018 +0800

    add a board for rda600
    
    Signed-off-by: ning.ma <ning.ma@roadefend.com>

diff --git a/arch/arm/cpu/armv8/s32/Kconfig b/arch/arm/cpu/armv8/s32/Kconfig
index 9edd562..62f4f7a 100644
--- a/arch/arm/cpu/armv8/s32/Kconfig
+++ b/arch/arm/cpu/armv8/s32/Kconfig
@@ -18,6 +18,9 @@ choice
 	help
 	  S32 Target Board Selection
 
+config TARGET_RDA600
+	bool "Support rda600"
+
 config TARGET_S32V234EVB
 	bool "Support s32v234evb"
 
@@ -91,6 +94,7 @@ config DDR_HANDSHAKE_AT_RESET
 	help
 	  Enable DDR handshake after functional reset
 
+source "board/freescale/rda600/Kconfig"
 source "board/freescale/s32v234evb/Kconfig"
 source "board/freescale/s32v234fvb/Kconfig"
 source "board/freescale/s32v234pcie/Kconfig"
diff --git a/board/freescale/rda600/Kconfig b/board/freescale/rda600/Kconfig
new file mode 100644
index 0000000..2d7357b
--- /dev/null
+++ b/board/freescale/rda600/Kconfig
@@ -0,0 +1,31 @@
+if TARGET_RDA600
+
+config SYS_BOARD
+	string
+	default "rda600"
+
+config SYS_CONFIG_NAME
+	string
+	default "rda600"
+
+# S32V234EVB rev. A board with DDR3 has 4x512 MB DDR chips
+# DDR0(1024MB) and DDR1(1024MB).
+# S32V234EVB rev. D board with LPDDR2 has 2x256 MB DDR chips
+# DDR0(256MB) and DDR1(256MB).
+# U-boot uses only one DDR slot for the boards which don't have
+# the DDR slots mapped as contiguous memory, otherwise uses
+# both DDR slots.
+
+config SYS_DDR_SIZE
+	int
+	default 2147483648 if S32_DDR3
+	default 268435456 if S32_LPDDR2
+
+config PHY_RGMII_DIRECT_CONNECTED
+	bool "Enable fixed PHY for MDIO Bus/PHY emulation with fixed speed/link PHYs"
+	default n
+	help
+	  Adds the platform "fixed" MDIO Bus to cover the boards that
+	  use PHYs that are not connected to the real MDIO bus.
+
+endif
diff --git a/board/freescale/rda600/MAINTAINERS b/board/freescale/rda600/MAINTAINERS
new file mode 100644
index 0000000..1681cb8
--- /dev/null
+++ b/board/freescale/rda600/MAINTAINERS
@@ -0,0 +1,6 @@
+S32V234 Evaluation BOARD
+M:	-
+S:	Maintained
+F:	board/freescale/rda600/
+F:	include/configs/rda600.h
+F:	configs/rda600_defconfig
diff --git a/board/freescale/rda600/Makefile b/board/freescale/rda600/Makefile
new file mode 100644
index 0000000..ce788c0
--- /dev/null
+++ b/board/freescale/rda600/Makefile
@@ -0,0 +1,9 @@
+#
+# (C) Copyright 2013-2015 Freescale Semiconductor, Inc.
+#
+# SPDX-License-Identifier:	GPL-2.0+
+#
+
+obj-y   := rda600.o
+
+#########################################################################
diff --git a/board/freescale/rda600/rda600.c b/board/freescale/rda600/rda600.c
new file mode 100644
index 0000000..2434dbc
--- /dev/null
+++ b/board/freescale/rda600/rda600.c
@@ -0,0 +1,249 @@
+/*
+ * (C) Copyright 2013-2016 Freescale Semiconductor, Inc.
+ * (C) Copyright 2016-2017 NXP
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/io.h>
+#include <asm/arch/soc.h>
+#include <fdt_support.h>
+#include <libfdt.h>
+#include <miiphy.h>
+#include <netdev.h>
+#include <i2c.h>
+
+#ifdef CONFIG_PHY_MICREL
+#include <micrel.h>
+#endif
+
+#ifdef CONFIG_SJA1105
+#include "sja1105.h"
+#endif
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#ifdef CONFIG_FSL_DSPI
+static void setup_iomux_dspi(void)
+{
+	/* Muxing for DSPI0 */
+
+	/* Configure Chip Select Pins */
+	writel(SIUL2_PAD_CTRL_DSPI0_MSCR_CS0_OUT, SIUL2_MSCRn(SIUL2_MSCR_PB8));
+	writel(SIUL2_PAD_CTRL_DSPI0_MSCR_CS4_OUT, SIUL2_MSCRn(SIUL2_MSCR_PC0));
+	writel(SIUL2_PAD_CTRL_DSPI0_MSCR_CS5_OUT, SIUL2_MSCRn(SIUL2_MSCR_PC1));
+	writel(SIUL2_PAD_CTRL_DSPI0_MSCR_CS6_OUT, SIUL2_MSCRn(SIUL2_MSCR_PC2));
+	writel(SIUL2_PAD_CTRL_DSPI0_MSCR_CS7_OUT, SIUL2_MSCRn(SIUL2_MSCR_PC3));
+
+	/* MSCR */
+	writel(SIUL2_PAD_CTRL_DSPI0_MSCR_SOUT_OUT, SIUL2_MSCRn(SIUL2_MSCR_PB6));
+
+	writel(SIUL2_PAD_CTRL_DSPI0_MSCR_SCK_OUT, SIUL2_MSCRn(SIUL2_MSCR_PB5));
+
+	writel(SIUL2_PAD_CTRL_DSPI0_MSCR_SIN_OUT, SIUL2_MSCRn(SIUL2_MSCR_PB7));
+
+	/* IMCR */
+	writel(SIUL2_PAD_CTRL_DSPI0_IMCR_SIN_IN,
+		SIUL2_IMCRn(SIUL2_PB7_IMCR_SPI0_SIN));
+}
+#endif
+
+static void setup_iomux_uart(void)
+{
+	/* Muxing for linflex0 and linflex1 */
+
+	/* set PA12 - MSCR[12] - for UART0 TXD */
+	writel(SIUL2_MSCR_PORT_CTRL_UART_TXD, SIUL2_MSCRn(SIUL2_MSCR_PA12));
+
+	/* set PA11 - MSCR[11] - for UART0 RXD */
+	writel(SIUL2_MSCR_PORT_CTRL_UART_RXD, SIUL2_MSCRn(SIUL2_MSCR_PA11));
+	/* set UART0 RXD - IMCR[200] - to link to PA11 */
+	writel(SIUL2_IMCR_UART_RXD_to_pad, SIUL2_IMCRn(SIUL2_IMCR_UART0_RXD));
+
+	/* set PA14 - MSCR[14] - for UART1 TXD*/
+	writel(SIUL2_MSCR_PORT_CTRL_UART_TXD, SIUL2_MSCRn(SIUL2_MSCR_PA14));
+
+	/* set PA13 - MSCR[13] - for UART1 RXD */
+	writel(SIUL2_MSCR_PORT_CTRL_UART_RXD, SIUL2_MSCRn(SIUL2_MSCR_PA13));
+	/* set UART1 RXD - IMCR[202] - to link to PA13 */
+	writel(SIUL2_IMCR_UART_RXD_to_pad, SIUL2_IMCRn(SIUL2_IMCR_UART1_RXD));
+}
+
+static void setup_iomux_i2c(void)
+{
+	/* I2C0 - Serial Data Input */
+	writel(SIUL2_PAD_CTRL_I2C0_MSCR_SDA, SIUL2_MSCRn(99));
+	writel(SIUL2_PAD_CTRL_I2C0_IMCR_SDA, SIUL2_IMCRn(269));
+
+	/* I2C0 - Serial Clock Input */
+	writel(SIUL2_PAD_CTRL_I2C0_MSCR_SCLK, SIUL2_MSCRn(100));
+	writel(SIUL2_PAD_CTRL_I2C0_IMCR_SCLK, SIUL2_IMCRn(268));
+
+	/* I2C1 - Serial Data Input */
+	writel(SIUL2_PAD_CTRL_I2C1_MSCR_SDA, SIUL2_MSCRn(101));
+	writel(SIUL2_PAD_CTRL_I2C1_IMCR_SDA, SIUL2_IMCRn(271));
+
+	/* I2C1 - Serial Clock Input */
+	writel(SIUL2_PAD_CTRL_I2C1_MSCR_SCLK, SIUL2_MSCRn(102));
+	writel(SIUL2_PAD_CTRL_I2C1_IMCR_SCLK, SIUL2_IMCRn(270));
+
+	/* I2C2 - Serial Data Input */
+	writel(SIUL2_PAD_CTRL_I2C2_MSCR_SDA, SIUL2_MSCRn(19));
+	writel(SIUL2_PAD_CTRL_I2C2_IMCR_SDA, SIUL2_IMCRn(273));
+
+	/* I2C2 - Serial Clock Input */
+	writel(SIUL2_PAD_CTRL_I2C2_MSCR_SCLK, SIUL2_MSCRn(20));
+	writel(SIUL2_PAD_CTRL_I2C2_IMCR_SCLK, SIUL2_IMCRn(272));
+}
+
+#ifdef CONFIG_SYS_USE_NAND
+void setup_iomux_nfc(void)
+{
+	/*TODO: Implement nfc iomux when it is activated.*/
+}
+#endif
+
+static void mscm_init(void)
+{
+	struct mscm_ir *mscmir = (struct mscm_ir *)MSCM_BASE_ADDR;
+	int i;
+
+	for (i = 0; i < MSCM_IRSPRC_NUM; i++)
+		writew(MSCM_IRSPRC_CPn_EN, &mscmir->irsprc[i]);
+}
+
+int board_phy_config(struct phy_device *phydev)
+{
+#ifdef CONFIG_PHY_MICREL
+	/* Enable all AutoNeg capabilities */
+	ksz9031_phy_extended_write(phydev, 0x02,
+				   MII_KSZ9031_EXT_OP_MODE_STRAP_OVRD,
+				   MII_KSZ9031_MOD_DATA_NO_POST_INC,
+				   MII_KSZ9031_EXT_OMSO_RGMII_ALL_CAP_OVRD);
+
+	/* Reset the PHY so that the previous changes take effect */
+	phy_write(phydev, CONFIG_FEC_MXC_PHYADDR, MII_BMCR, BMCR_RESET);
+#endif
+
+	if (phydev->drv->config)
+		phydev->drv->config(phydev);
+
+	return 0;
+}
+
+void setup_xrdc(void)
+{
+	writel(XRDC_ADDR_MIN, XRDC_MRGD_W0_16);
+	writel(XRDC_ADDR_MAX, XRDC_MRGD_W1_16);
+	writel(XRDC_VALID, XRDC_MRGD_W3_16);
+
+	writel(XRDC_ADDR_MIN, XRDC_MRGD_W0_17);
+	writel(XRDC_ADDR_MAX, XRDC_MRGD_W1_17);
+	writel(XRDC_VALID, XRDC_MRGD_W3_17);
+
+	writel(XRDC_ADDR_MIN, XRDC_MRGD_W0_18);
+	writel(XRDC_ADDR_MAX, XRDC_MRGD_W1_18);
+	writel(XRDC_VALID, XRDC_MRGD_W3_18);
+
+	writel(XRDC_ADDR_MIN, XRDC_MRGD_W0_19);
+	writel(XRDC_ADDR_MAX, XRDC_MRGD_W1_19);
+	writel(XRDC_VALID, XRDC_MRGD_W3_19);
+}
+
+#ifdef CONFIG_DCU_QOS_FIX
+int board_dcu_qos(void)
+{
+	writel(0x0, 0x40012380);
+	writel(0x0, 0x40012384);
+	writel(0x0, 0x40012480);
+	writel(0x0, 0x40012484);
+	writel(0x0, 0x40012580);
+	writel(0x0, 0x40012584);
+	writel(0x0, 0x40012680);
+	writel(0x0, 0x40012684);
+	writel(0x0, 0x40012780);
+	writel(0x0, 0x40012784);
+	writel(0x0, 0x40012880);
+	writel(0x0, 0x40012884);
+	writel(0x0, 0x40012980);
+	writel(0x0, 0x40012984);
+	writel(0x0, 0x40012A80);
+	writel(0x0, 0x40012A84);
+	writel(0x0, 0x40012B80);
+	writel(0x0, 0x40012B84);
+	writel(0x0, 0x40012C80);
+	writel(0x0, 0x40012C84);
+	writel(0x0, 0x40012D80);
+	writel(0x0, 0x40012D84);
+	writel(0x0, 0x40012E80);
+	writel(0x0, 0x40012E84);
+	writel(0x0, 0x40012F80);
+	writel(0x0, 0x40012F84);
+
+	return 0;
+}
+#endif
+
+int board_early_init_f(void)
+{
+	clock_init();
+	mscm_init();
+
+	setup_iomux_uart();
+	setup_iomux_enet();
+	setup_iomux_i2c();
+#ifdef CONFIG_FSL_DSPI
+	setup_iomux_dspi();
+#endif
+#ifdef CONFIG_SYS_USE_NAND
+	setup_iomux_nfc();
+#endif
+	setup_iomux_dcu();
+
+#ifdef CONFIG_DCU_QOS_FIX
+	board_dcu_qos();
+#endif
+
+	setup_xrdc();
+	return 0;
+}
+
+int board_init(void)
+{
+	/* address of boot parameters */
+	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
+
+	return 0;
+}
+
+int checkboard(void)
+{
+	printf("Board: %s\n", CONFIG_SYS_CONFIG_NAME);
+
+	return 0;
+}
+
+void board_net_init(void)
+{
+#ifdef CONFIG_SJA1105
+	/* Only probe the switch if we are going to use networking.
+	 * The probe has a self check so it will quietly exit if we call it
+	 * twice.
+	 */
+	sja1105_probe(SJA_1_CS, SJA_1_BUS);
+	/* The SJA switch can have its ports RX lines go out of sync. They need
+	 * to be reseted in order to allow network traffic.
+	 */
+	sja1105_reset_ports(SJA_1_CS, SJA_1_BUS);
+#endif
+}
+
+
+#if defined(CONFIG_OF_FDT) && defined(CONFIG_OF_BOARD_SETUP)
+int ft_board_setup(void *blob, bd_t *bd)
+{
+	ft_cpu_setup(blob, bd);
+	return 0;
+}
+#endif /* defined(CONFIG_OF_FDT) && defined(CONFIG_OF_BOARD_SETUP) */
diff --git a/board/freescale/rda600/rda600.cfg b/board/freescale/rda600/rda600.cfg
new file mode 100644
index 0000000..9107968
--- /dev/null
+++ b/board/freescale/rda600/rda600.cfg
@@ -0,0 +1,47 @@
+/*
+ * (C) Copyright 2013-2015 Freescale Semiconductor, Inc.
+ * (C) Copyright 2017 NXP
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+/*
+ * Refer docs/README.imxmage for more details about how-to configure
+ * and create imximage boot image
+ *
+ * The syntax is taken as close as possible with the kwbimage
+ */
+#include <asm/imx-common/imximage.cfg>
+
+/* image version */
+IMAGE_VERSION 3
+BOOT_FROM sd_v3
+
+/* SECURE_CALLBACK 0x70 */
+
+/*
+ * Boot Device : one of qspi, sd:
+ * qspi:   flash_offset: 0x1000
+ * sd/mmc: flash_offset: 0x1000
+ */
+
+
+#ifdef CONFIG_SECURE_BOOT
+SECURE_BOOT
+#endif
+
+/*
+ * Device Configuration Data (DCD)
+ *
+ * Each entry must have the format:
+ * Addr-type           Address        Value
+ *
+ * where:
+ *      Addr-type register length (1,2 or 4 bytes)
+ *      Address   absolute address of the register
+ *      value     value to be stored in the register
+ */
+DATA 4 0x4003C280 0x018020F0
+DATA 4 0x4004A02C 0x00000021
+DATA 4 0x4004A004 0x30005AF0
+DATA 4 0x4004A004 0x3000A50F
diff --git a/configs/rda600_defconfig b/configs/rda600_defconfig
deleted file mode 100644
index d2b9d81..0000000
--- a/configs/rda600_defconfig
+++ /dev/null
@@ -1,14 +0,0 @@
-CONFIG_ARM=y
-CONFIG_ARCH_S32=y
-CONFIG_TARGET_S32V234EVB=y
-CONFIG_S32V234EVB_29288=y
-CONFIG_S32_DDR3=y
-CONFIG_ARMV8_MULTIENTRY=y
-CONFIG_SYS_EXTRA_OPTIONS="IMX_CONFIG=board/freescale/s32v234evb/s32v234evb.cfg"
-CONFIG_CMD_DHCP=y
-CONFIG_CMD_PING=y
-CONFIG_CMD_SPI=y
-CONFIG_FSL_LINFLEXUART=y
-CONFIG_FSL_CSE3=y
-CONFIG_FSL_DSPI=y
-CONFIG_SJA1105=y
diff --git a/include/configs/rda600.h b/include/configs/rda600.h
new file mode 100644
index 0000000..d55e274
--- /dev/null
+++ b/include/configs/rda600.h
@@ -0,0 +1,32 @@
+/*
+ * (C) Copyright 2015-2016 Freescale Semiconductor, Inc.
+ * (C) Copyright 2016-2017 NXP
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+/*
+ * Configuration settings for the Freescale S32V234 EVB board,
+ * Schematics 29288.
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+/* The configurations of this board depend on the definitions in this file and
+* the ones in the header included at the end, configs/s32v234evb_2016q4.h */
+
+#define	FDT_FILE rda600.dtb
+
+/* #define CONFIG_CMD_PCI */
+
+
+#define CONFIG_BOARD_USE_RAMFS_IN_NFSBOOT
+
+#define CONFIG_DSPI_CS_SCK_DELAY 100
+#define CONFIG_DSPI_SCK_CS_DELAY 100
+
+/* we include this file here because it depends on the above definitions */
+#include <configs/s32v234evb_2016q4.h>
+
+#endif
