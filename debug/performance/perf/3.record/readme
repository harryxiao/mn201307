 使用 top 和 stat 之后，您可能已经大致有数了。要进一步分析，便需要一些粒度更细的信息。
 比如说您已经断定目标程序计算量较大，也许是因为有些代码写的不够精简。那么面对长长的代
 码文件，究竟哪几行代码需要进一步修改呢？这便需要使用 perf record 记录单个函数级别的
 统计信息，并使用 perf report 来显示统计结果。

您的调优应该将注意力集中到百分比高的热点代码片段上，假如一段代码只占用整个程序运行
时间的 0.1%，即使您将其优化到仅剩一条机器指令，恐怕也只能将整体的程序性能提高 0.1%。

我曾发现自己写的一个程序居然有近一半的时间花费在 string 类的几个方法上，string 是
C++ 标准，我绝不可能写出比 STL 更好的代码了。因此我只有找到自己程序中过多使用 
string 的地方。因此我很需要按照调用关系进行显示的统计信息。

使用 perf 的 -g 选项便可以得到需要的信息：
perf record -e cpu-clock -g ./t1.out
