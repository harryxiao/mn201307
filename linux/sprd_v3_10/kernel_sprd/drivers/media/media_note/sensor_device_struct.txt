sensor device struct

================================================================================

1. struct miscdevice vensor_dev 代表一个杂项字符设备，// this_device

       vensor_dev           
       +--------------+
       | minor        |    
       | name         |
       | fops         |
       | list         |
       | parent       |
       | this_device  |
       | ..           |
       +--------------+
2. struct sensor_module_tab_tag  代表 sensor模块table

	 sensor_module_tab_ta
     +----------------------------------+
 	 |  total_users;                    |
 	 |  padding;                        |
 	 |  sensor_id_lock;                 |
 	 |  *of_node;                       |
 	 |  *sensor_mm_in_clk;              |
 	 |  wakelock;                       |
 	 |  sensor_dev_tab[SENSOR_DEV_MAX]; +--+
 	 |  otp_param[SENSOR_DEV_MAX];      |  |
     +----------------------------------+  |
                                           |
                                           |
         +---------------------+<----------+
         |  sensor_module_tag  | sensor_main
         +---------------------+
         |  sensor_module_tag  | sensor_sub 
         +---------------------+
         |  sensor_module_tag  |          
         +---------------------+
         |   ...               |
         +---------------+-----+
3. struct sensor_module_tag 代表一个 sensor 设备

		sensor_module_tag
      +---------------------+
	  |  sync_lock;         |
	  |  users;             |
	  |  *cur_i2c_client;   |
	  |  *vcm_i2c_client;   |
	  |  vcm_gpio_i2c_flag; |
      +---------------------+

4. sturct sensor_file_tag

struct sensor_file_tag {
	struct sensor_module_tab_tag    *module_data;
	uint32_t                        sensor_id;
	uint32_t                        sensor_mclk;
	uint32_t                        iopower_on_count;
	uint32_t                        avddpower_on_count;
	uint32_t                        dvddpower_on_count;
	uint32_t                        motpower_on_count;
	uint32_t                        mipi_on;
	uint32_t                        padding;
	uint32_t                        phy_id;
	uint32_t                        if_type;
	struct sensor_gpio_tag          gpio_tab;
	struct clk                      *ccir_clk;
	struct clk                      *ccir_enable_clk;
	struct clk                      *mipi_clk;
	struct regulator                *camvio_regulator;
	struct regulator                *camavdd_regulator;
	struct regulator                *camdvdd_regulator;
	struct regulator                *cammot_regulator;
	struct sensor_mem_tag           sensor_mem;
	void                            *csi_handle;
};

================================================================================

打开设备文件时:
	(1) file对象的private_data 字段保存着 杂项字符设备描述符的地址，
	(2) 杂项字符设备描述符的this_device字段的 platform_data 成员，
		保存着 sensor_module_tab_tag 描述符的地址。
	

		sturct file
        +---------------+
        | ...           |           
  +-----+ private_data  |          
  |     +---------------+           
  |(1)                                 
  |     struct miscdevice  
  +---->+-----------------+ 
        | ...             | 
        | this_device     +---+
        |                 |   |
        +-----------------+   |                                   
                              | (2)                               
                              |
         struct device        |
         +----------------+<--+
         | ...            | 
 +-------+ platform_data  | 
 |       +----------------+                                                     
 |(2)                                                        
 |
 |                                           
 |        struct sensor_module_tab_tag       
 +------>+------------------------+          
         |                        |          
         |                        |                          
         +------------------------+


在设备文件打开时：
	(3) 会分配并初始化 sensor_file_tag 结构体，代表一个被打开的
		sensor_module_tab_tag. 它的地址保存到file对象的private_data
		字段中，以在将来之用。
		sensor_module_tab_tag 的地址保存到 sensor_file_tag 的module_data
		字段中。

		sturct file
        +---------------+
        | ...           |           
  +-----+ private_data  |          
  |     +---------------+           
  |(3)                                 
  |     struct sensor_file_tag  
  +---->+-----------------+ 
        | ...             | 
  +-----+ module_data     |    
  |     |                 |    
  |     +-----------------+                                       
  |                            
  |
  |       struct sensor_module_tab_tag       
  +----->+------------------------+          
         |                        |          
         |                        |                          
         +------------------------+

================================================================================
(1) 和(2) 的这些结构的关系，在哪里被确定的？
probe:
	sensor_dev.this_device->platform_data = (void*)p_mod;


