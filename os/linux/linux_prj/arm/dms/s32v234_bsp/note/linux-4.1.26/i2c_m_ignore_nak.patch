commit 63285f428b7e081c8ad156c778b96675cd7291dc
Author: ning.ma <ning.ma@roadefend.com>
Date:   Thu Mar 29 17:38:05 2018 +0800

    [i2c] add sha204 dts & add support to I2C_M_IGNORE_NAK flag
    
    Signed-off-by: ning.ma <ning.ma@roadefend.com>

diff --git a/linux/arch/arm64/boot/dts/freescale/rda600.dts b/linux/arch/arm64/boot/dts/freescale/rda600.dts
index 4798769..6369e5a 100644
--- a/linux/arch/arm64/boot/dts/freescale/rda600.dts
+++ b/linux/arch/arm64/boot/dts/freescale/rda600.dts
@@ -195,6 +195,13 @@
 		/*interrupts = <26 IRQ_TYPE_EDGE_RISING>;*/
 	};
 
+	sha204: sha204@63 {
+		compatible = "atmel,sha204";
+		reg = <0x63>;
+		/*interrupt-parent = <&gpio>;*/
+		/*interrupts = <26 IRQ_TYPE_EDGE_RISING>;*/
+	};
+
 };
 
 &spi0 {
diff --git a/linux/drivers/i2c/busses/i2c-imx.c b/linux/drivers/i2c/busses/i2c-imx.c
index 9d3eebf..679d932 100644
--- a/linux/drivers/i2c/busses/i2c-imx.c
+++ b/linux/drivers/i2c/busses/i2c-imx.c
@@ -799,6 +799,7 @@ static int i2c_imx_dma_read(struct imx_i2c_struct *i2c_imx,
 static int i2c_imx_write(struct imx_i2c_struct *i2c_imx, struct i2c_msg *msgs)
 {
 	int i, result;
+	unsigned short nak_ok = msgs->flags & I2C_M_IGNORE_NAK;
 
 	dev_dbg(&i2c_imx->adapter.dev, "<%s> write slave address: addr=0x%x\n",
 		__func__, msgs->addr << 1);
@@ -809,7 +810,7 @@ static int i2c_imx_write(struct imx_i2c_struct *i2c_imx, struct i2c_msg *msgs)
 	if (result)
 		return result;
 	result = i2c_imx_acked(i2c_imx);
-	if (result)
+	if (result && !nak_ok)
 		return result;
 	dev_dbg(&i2c_imx->adapter.dev, "<%s> write data\n", __func__);
 
@@ -823,7 +824,7 @@ static int i2c_imx_write(struct imx_i2c_struct *i2c_imx, struct i2c_msg *msgs)
 		if (result)
 			return result;
 		result = i2c_imx_acked(i2c_imx);
-		if (result)
+		if (result && !nak_ok)
 			return result;
 	}
 	return 0;
