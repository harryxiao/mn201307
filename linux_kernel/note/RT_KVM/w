
实时的重点是准确性，精确性，而不是速度。
允许的最慢响应时间可能小到几毫秒，并且 99.999% 的这些关键点工作
都要被即时处理，如果没有被及时处理的话... (想想火箭爆炸吧)，总之
要全部及时的处理好。速度是重要的，但是要一直保证这种低延迟会带来
另一个问题，那就是产出下降。

几乎每一个潜在的系统因素都来自于内核。
比如:
(1) 某个驱动程序可能会关闭中断而阻断高优先级的程序的调度。
(2) 非实时内核中的自旋锁也是另外一个潜在的原因，因为 linux 
	在持有自旋锁的同时不能进行 schedule() 调度。
	
这些问题可以通过运行 PREEMPT_RT(实时内核补丁集)构建的内核控制。
除了临界区代码，一个 PREEMPT_RT 内核致力于使 linux 的每一部分都是可抢占的。
