

gdbserver和gdb的版本要匹配，否则会出错。
prebuilts/gcc/linux-x86/x86/x86_64-linux-android-4.9/include/gdb
prebuilts/misc/android-x86_64/gdbserver64


1. 在目标机 /data目录下建一个目录bin，然后把gdbserver
push到这个/data/bin/目录下，增加执行权限
	chmod 777 gdbserver

2. 在目标手机上运行要调试的APP，获取这个APP的进程号，
比如18440，然后在目标手机的命令行下执行
	./gdbserver :1234 --attach 18440

输出如下：
root@mako:/data/bin # ./gdbserver :1234 --attach 18440
Attached; pid = 18440
Listening on port 1234
表示已经attach到进程2559上了，在tcp端口1234上监听，
gdb这边只要也连上1234这个端口就可以了。

3. 在host 上启动gdb，然后执行shell命令（shell adb forward tcp:1234 tcp:1234），
表示通过adb映射tcp端口1234，命令中前面的是local的端口，后面的是remote的端口，

再执行命令（target remote localhost:1234），与远程程序建立链接。

如下：
BriansdeMacBook-Pro:bin brian$ ./arm-linux-androideabi-gdb

GNU gdb (GDB) 7.3.1-gg2

Copyright (C) 2011 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law. Type "show copying"
and "show warranty" for details.
This GDB was configured as "--host=i686-pc-linux-gnu
--target=arm-none-linux-gnueabi".
For bug reporting instructions, please see:
.
(gdb) shell adb forward tcp:1234 tcp:1234
(gdb) target remote localhost:1234
	Remote debugging using localhost:1234
	0x40011384 in ?? ()
(gdb)



4. 开始gdb调试
