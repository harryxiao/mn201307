vmm

  
================================================================================
1. CPU虚拟化
	硬件辅助虚拟化

	第一代的虚拟化增强包括Intel Virtualization Technology (VT-x)和AMD的AMD-V，
	这两种技术都为CPU增加了新的执行模式root模式，可以让VMM运行在root模式下，而
	root 模式位于Ring 0的下面。

	特权和敏感指令自动在hypervisor上执行，从而无需BT或半虚拟化技术。
	客户操作系统的状态保存在VT-x（Virtual Machine Control Structure，虚拟机控制结构）
	中或AMD-v(Virtual Machine Control Block，虚拟机控制块)。

	无需修改客户操作系统，最佳兼容性



 ---------------------------------------------
                           +--------------+
                   Ring3   |   用户应用   +-----------+
                           +--------------+           |
                   ---------------------------        |
                           +--------------+           |
非root模式的       Ring2   |              |           |
特权指令                   +--------------+           |
                   ---------------------------        |
                           +--------------+           |
                   Ring1   |              |           |
                           +--------------+           |
                   ---------------------------        |
                           +--------------+           |
                   Ring0   | 客户操作系统 +-----+     |
                           +--------------+     |     |
 ---------------------------------------------  |     |
                                                |     |
root模式                   +--------------+     |     |
特权指令                   |     VMM      |<----+-----+
                           +--------------+-----+
                                                |
 ---------------------------------------------  |
					+-----------------+         |
					|     hardware    |<--------+
					+-----------------+

================================================================================
2. 内存虚拟化
	通过内存虚拟化共享物理系统内存，动态分配给虚拟机。虚拟机的内存虚拟化很象现在
	的操作系统支持的虚拟内存方式，应用程序看到邻近的内存地址空间，这个地址空间无
	需和下面的物理机器内存直接对应，操作系统保持着虚拟页到物理页的映射。现在所有
	的x86 CPU都包括了一个称为内存管理的模块MMU（Memory Management Unit）和TLB
	(Translation Lookaside Buffer)，通过MMU和TLB来优化虚拟内存的性能。

	为了在一台机器上运行多个虚拟机，需要增加一个新的内存虚拟化层，也就是说，
	必须虚拟MMU来支持客户操作系统。客户操作系统继续控制虚拟地址到客户内存物理地
	址的映射，但是客户操作系统不能直接访问实际机器内存。VMM负责映射客户物理内存
	到实际机器内存，它通过影子页表来加速映射。VMM使用TLB硬件来映射虚拟内存直接
	到机器内存，从而避免了每次访问进行两次翻译。当客户操作系统更改了虚拟内存到
	物理内存的映射表，VMM也会更新影子页表来启动直接查询。MMU虚拟化引入了虚拟化
	损耗，第二代的硬件辅助虚拟化将支持内存的虚拟化辅助，从而大大降低因此而带来
	的虚拟化损耗，让内存虚拟化更高效。


================================================================================
3.  设备和I/O虚拟化

	也就是如何管理和路由物理设备和虚拟设备之间的I/O请求。

	基于软件的I/O虚拟化和管理为设备管理带来了新的特性和功能，让设备的管理更容易。
	拿网络为例，通过虚拟网卡和交换机可以在一台物理机上不同虚拟机之间建立虚拟网络，
	而这不会在物理网络上产生任何的流量；网卡teaming允许多个物理网卡绑定成一个虚
	拟机网卡，提供了很好的容错能力，同时保持了同一MAC地址。
	I/O虚拟化的关键是保持虚拟化优势的同时，尽量降低虚拟化给CPU造成的负担。

	Hypervisor虚拟化物理硬件，为每台虚拟机提供一套标准的虚拟设备。这些虚拟设备
	高效模拟常见的物理硬件，将虚拟机的请求发送到物理硬件。该硬件标准化的过程也
	让虚拟机标准化，让虚拟机更容易在各种平台上自由移动，而无需关心下面实际的物
	理硬件类型。







