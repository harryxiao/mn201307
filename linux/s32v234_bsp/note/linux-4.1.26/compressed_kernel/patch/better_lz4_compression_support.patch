diff --git a/linux/arch/arm64/Kconfig b/linux/arch/arm64/Kconfig
index 19ab8fa..582f26b 100644
--- a/linux/arch/arm64/Kconfig
+++ b/linux/arch/arm64/Kconfig
@@ -620,6 +620,47 @@ config EFI
 	  allow the kernel to be booted as an EFI application. This
 	  is only useful on systems that have UEFI firmware.
 
+choice
+	prompt "Kernel compression mode"
+	default BUILD_ARM64_KERNEL_GZIP
+	help
+	  Some bootloaders are capable of booting not only uncompressed or
+	  gzip compressed kernels, but also LZ4. This option will allow you
+	  to select which format the kernel binary will be compressed to.
+
+	  If in doubt, select 'gzip'
+
+config BUILD_ARM64_KERNEL_GZIP
+	bool "Gzip"
+	help
+	  The old and tried gzip compression. It provides a good balance
+	  between compression ratio and decompression speed.
+
+config BUILD_ARM64_KERNEL_LZ4
+	bool "LZ4"
+	help
+	  LZ4 is an LZ77-type compressor with a fixed, byte-oriented encoding.
+	  A preliminary version of LZ4 de/compression tool is available at
+	  <https://code.google.com/p/lz4/>.
+
+endchoice
+
+config BUILD_ARM64_APPENDED_DTB_IMAGE
+	bool "Build a concatenated Image.(gz/lz4)-dtb by default"
+	depends on OF
+	help
+	  Enabling this option will cause a concatenated Image.gz or Image.lz4
+	  and list of DTBs to be built by default (instead of a standalone
+	  Image.gz or Image.lz4.)
+	  The image will built in arch/arm64/boot/Image.(gz/lz4)-dtb
+
+config BUILD_ARM64_APPENDED_DTB_IMAGE_NAMES
+	string "Default dtb names"
+	depends on BUILD_ARM64_APPENDED_DTB_IMAGE
+	help
+	  Space separated list of names of dtbs to append when
+	  building a concatenated Image.(gz/lz4)-dtb.
+
 config DMI
 	bool "Enable support for SMBIOS (DMI) tables"
 	depends on EFI
diff --git a/linux/arch/arm64/Makefile b/linux/arch/arm64/Makefile
index 2b8993f..fc24c45 100644
--- a/linux/arch/arm64/Makefile
+++ b/linux/arch/arm64/Makefile
@@ -66,15 +66,30 @@ endif
 machdirs	:= $(patsubst %,arch/arm64/mach-%/,$(machine-y))
 core-y		+= $(machdirs)
 
+ifeq ($(CONFIG_BUILD_ARM64_KERNEL_LZ4),y)
+KBUILD_COMPRESS_SUFFIX := lz4
+KBUILD_COMPRESS_CMD := lz4
+endif
+ifeq ($(CONFIG_BUILD_ARM64_KERNEL_GZIP),y)
+KBUILD_COMPRESS_SUFFIX := gz
+KBUILD_COMPRESS_CMD := gzip
+endif
+
+export KBUILD_COMPRESS_SUFFIX KBUILD_COMPRESS_CMD
+
 # Default target when executing plain make
-KBUILD_IMAGE	:= Image.gz
+ifeq ($(CONFIG_BUILD_ARM64_APPENDED_DTB_IMAGE),y)
+KBUILD_IMAGE	:= Image.$(KBUILD_COMPRESS_SUFFIX)-dtb
+else
+KBUILD_IMAGE	:= Image.$(KBUILD_COMPRESS_SUFFIX)
+endif
 KBUILD_DTBS	:= dtbs
 
 all:	$(KBUILD_IMAGE) $(KBUILD_DTBS)
 
 boot := arch/arm64/boot
 
-Image Image.gz: vmlinux
+Image Image.$(KBUILD_COMPRESS_SUFFIX): vmlinux
 	$(Q)$(MAKE) $(build)=$(boot) $(boot)/$@
 
 zinstall install: vmlinux
@@ -91,6 +106,9 @@ dtbs: prepare scripts
 dtbs_install:
 	$(Q)$(MAKE) $(dtbinst)=$(boot)/dts
 
+Image.$(KBUILD_COMPRESS_SUFFIX)-dtb: vmlinux scripts dtbs
+	$(Q)$(MAKE) $(build)=$(boot) $(boot)/$@
+
 PHONY += vdso_install
 vdso_install:
 	$(Q)$(MAKE) $(build)=arch/arm64/kernel/vdso $@
@@ -101,7 +119,8 @@ archclean:
 	$(Q)$(MAKE) $(clean)=$(boot)/dts
 
 define archhelp
-  echo  '* Image.gz      - Compressed kernel image (arch/$(ARCH)/boot/Image.gz)'
+  echo  '* Image.gz      - Gzip compressed kernel image (arch/$(ARCH)/boot/Image.gz)'
+  echo  '* Image.lz4     - LZ4 compressed kernel image (arch/$(ARCH)/boot/Image.lz4)'
   echo  '  Image         - Uncompressed kernel image (arch/$(ARCH)/boot/Image)'
   echo  '* dtbs          - Build device tree blobs for enabled boards'
   echo  '  dtbs_install  - Install dtbs to $(INSTALL_DTBS_PATH)'
diff --git a/linux/arch/arm64/boot/Makefile b/linux/arch/arm64/boot/Makefile
index 5a0e3ab..74469a2 100644
--- a/linux/arch/arm64/boot/Makefile
+++ b/linux/arch/arm64/boot/Makefile
@@ -14,18 +14,21 @@
 # Based on the ia64 boot/Makefile.
 #
 
-targets := Image Image.gz
+targets := Image Image.$(KBUILD_COMPRESS_SUFFIX)
 
 $(obj)/Image: vmlinux FORCE
 	$(call if_changed,objcopy)
 
-$(obj)/Image.gz: $(obj)/Image FORCE
-	$(call if_changed,gzip)
+$(obj)/Image.$(KBUILD_COMPRESS_SUFFIX): $(obj)/Image FORCE
+	$(call if_changed,$(KBUILD_COMPRESS_CMD))
+
+$(obj)/Image.$(KBUILD_COMPRESS_SUFFIX)-dtb: $(obj)/Image.$(KBUILD_COMPRESS_SUFFIX) $(DTB_OBJS) FORCE
+	$(call if_changed,cat)
 
 install: $(obj)/Image
 	$(CONFIG_SHELL) $(srctree)/$(src)/install.sh $(KERNELRELEASE) \
 	$(obj)/Image System.map "$(INSTALL_PATH)"
 
-zinstall: $(obj)/Image.gz
+zinstall: $(obj)/Image.$(KBUILD_COMPRESS_SUFFIX)
 	$(CONFIG_SHELL) $(srctree)/$(src)/install.sh $(KERNELRELEASE) \
-	$(obj)/Image.gz System.map "$(INSTALL_PATH)"
+	$(obj)/Image.$(KBUILD_COMPRESS_SUFFIX) System.map "$(INSTALL_PATH)"
diff --git a/linux/scripts/Makefile.lib b/linux/scripts/Makefile.lib
index 79e8661..3f6480c 100644
--- a/linux/scripts/Makefile.lib
+++ b/linux/scripts/Makefile.lib
@@ -334,7 +334,7 @@ cmd_lzo = (cat $(filter-out FORCE,$^) | \
 
 quiet_cmd_lz4 = LZ4     $@
 cmd_lz4 = (cat $(filter-out FORCE,$^) | \
-	lz4c -l -c1 stdin stdout && $(call size_append, $(filter-out FORCE,$^))) > $@ || \
+	lz4c -9) > $@ || \
 	(rm -f $@ ; false)
 
 # U-Boot mkimage
