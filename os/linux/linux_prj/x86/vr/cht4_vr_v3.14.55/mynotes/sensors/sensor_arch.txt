sensors architecture

1.sensor code 分布

传感器系统
java部分:
	frameworks/base/core/java/android/hardware/

jni部分：
	frameworks/base/core/jni/android_hardware_SensorManager.cpp

HAL层：
	头文件：
	hardware/libhardware/include/hardware/sensors.h
	具体实现:
	vendor/intel/hardware/ish-sensors/vr_sensors/
		会通过libsensorhub.so中的接口实现与daemon通信

daemon:
	守护进程：
	vendor/intel/hardware/libsensorhub/vr_libsensorhub/:
	    src/daemon/	--> sensorhubd 		: init.rc 中启用一个service
	    src/lib/	--> libsensorhub.so	: sensor HAL 通过 dlopen打开libsensorhub.so,
	然后，通过dlsym保存其中的接口

驱动层(IPC通信):
	kernel/cht/drivers/hwmon/vr_sensors/
	通过SPI实现与sensorhub通信

sensorhub(stm32f411):
	accl gyro magn 挂在stm32上
	fusion算法在main中的while循环中被调用


2.sensor 系统架构
	java -- jni -- HAL -- daemon -- ipc driver -- sensorhub

3.hardware schematic diagram
------------------------------
AGM <--> sensorhub
sensorhub: stm32f411(cortex m4)

accelerometer & gyroscope (integrated in bmg160/bmi055?):
	CSB1 <--CS_Accel--> stm32 B4(PB5/I2C1_SMBA/SPI1_MOSI/SPI3_MOSI/SDIO_D3)
	CSB2 <--CS_Gyro --> stm32 D4(PB7/I2C1_SDA/USART1_RX/SDIO_D0)

	SCx <--SPI1_SCK--> stm32 F5(PA5/SPI1_SCK)
	SDx <--SPI1_MOSI--> stm32 F3(PA7/SPI1_MOSI)
	SDO1 <--SPI1_MISO--> stm32 F4(PA6/SPI1_MISO/SDIO_CMD)

	INT1 <--INT_Accel--> stm32 G5(PB0/SPI5_SCK)
	INT3 <--INT_Gyro--> stm32 G4(PB1/SPI5_NSS)
magnetometer(AK09916C):
	i2c_addr(0x48)
	SCL <--i2c1_scl--> stm32f4 C4(PB6/i2c_1scl/usart1_tx)
	SDA <--i2c1_sda--> stm32f4 C5(PB9/i2c1_sda/spi2_nss/i2c2_sda/sdio_d5)
------------------------------
sensorhub <--> soc
(a)fw update:
D1(PA8/I2C3_SCL/USART1_CK/USB_FS_SOF/SDIO_D1) <--Sensor_HUB_SCL--> I2C3_CLK
A4(PB4/JTRST/SPI1_MISO/SPI3_MISO/I2C3_SDA/SDIO_D0) <--Sensor_HUB_SDA--> I2C3_DATA
(b) ipc driver
G1(PB13/SPI2_SCK/SPI4_SCK/) <--SPI2_SCK_2SOC--> SPI1_CLK
F1(PB14/SPI2_MISO/SDIO_D6) <--SPI2_MISO_2SOC--> SPI1_MISO
E1(PB15/RTC_50HZ/SPI2_MOSI/SDIO_CK/RTC_REFIN) <--SPI2_MOSI_2SOC--> SPI1_MOSI
E2(PB12/I2C2_SMBA/SPI2_NSS/SPI4_NSS/SPI3_SCK) : GND(10K)


================================================================================
HAL		--		sensorhubd 		--	 driver

+-------------+                 +--------------+                   +------------+
|             |                 |              |                   |            |
|     HAL     |                 |  sensorhubd  |                   |   driver   |
|             |                 |              |                   |            |
|   dlopen()  |                 |              |                   |            |
+-------------+                 |              |                   |            |
| libsensorhub| <-------------> |              | <---------------> |            |
+-------------+                 +--------------+                   +------------+
          client    socket    server         /sys/class/hwmon/hwmon3/device:
                                                    control
                                                    counter
                                                    data
                                                    data_size
                                                    debug
                                                    driver
                                                    fw_version
                                                    hwmon
                                                    modalias
                                                    power
                                                    profile_pull_control
                                                    profile_pull_data
                                                    status_mask
                                                    status_trig
                                                    trace
                                                    uevent
                                                                              
                                                                             

LibsensorhubClient: mn:libsensorhub:psh_start_streaming_with_flag
|-- psh_send_recv_cmd_locked
	|-- psh_open_session_with_name



LibsensorhubClient: mn:libsensorhub:psh_open_session

LibsensorhubClient: mn:libsensorhub:psh_get_fd



sensorhubd:
dispatch_data()
|-- else if (p_cmd_resp->cmd_type == RESP_STREAMING) {
	|-- dispatch_streaming()
		|-- send_data_to_clients();


================================================================================
data package:
drivers:

sensorhubd:
//main.c

struct cmd_resp {
	unsigned char tran_id;
	unsigned char cmd_type;
	unsigned char sensor_id;
	unsigned short data_len;
#ifdef TV_SNRD_HAL
	struct timeval tv;
#endif
	char buf[0];
} __attribute__ ((packed));

>> libsensorhub:
	//include/message.h

	typedef struct {
		event_t event_type;
		cmd_ack_ret_t ret;
		int buf_len;
		unsigned char buf[];
	} cmd_ack_event;


