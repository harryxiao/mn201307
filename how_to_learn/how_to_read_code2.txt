作者：余晓曼
链接：https://www.zhihu.com/question/19625320/answer/18512481
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

在cnblog上看到一篇日志《如何看懂源代码--(分析源代码方法)》主要分六个部分
（ 1 ）读懂程式码，使心法皆为我所用。
	（a）读懂别人写的程式码，让你收获满满
	（b）先了解系统架构与行为模式，再细读 
	（c）熟悉沟通语言与惯例用语
	（d）掌握程式码撰写者的心态与习惯

（ 2 ）摸清架构，便可轻松掌握全貌。
	（a）阅读程式码的目的，在于了解全貌而非细节
	（b）由上而下厘清架构后，便可轻易理解组成关系
	（c）了解架构，必须要加上层次感
	（d）探索架构的第一件事：找出系统如何初始化

（ 3 ）优质工具在手，读懂程式非难事。
	（a）善用文字编辑器或IDE中，加速解读程式码 
	（b）grep按（读者：推荐来源透视）是一个基本而极为有用的工具
	（c）gtags可建立索引，让搜寻更有效率
	（d）再搭配htags制作的HTML文件，更是如虎添翼

（ 4 ）望文生义，进而推敲组件的作用。
	（a）好的说明文件难求，拼凑故事的能力很重要 
	（b）探索架构的第一步─ ─找到程式的入口
	（c）系统多会采用相同的架构处理插件程式
	（d）随着实务经验，归纳常见的架构模式
	（e）善用名称可加速了解

（ 5 ）找到程式入口，再由上而下抽丝剥茧。
	（a）展开的同时，随手记录树状结构
	（b）无法望文生义的函式，先试着预看一层
	（c）根据需要了解的粒度，决定展开的层数

（ 6 ）阅读的乐趣，透过程式码认识作者。
	（a）阅读程式码是新时代程式人必备的重要技能
	（b）好的名称能够摘要性地点出实体的作用
	（c）转换立场，理解作者的思考方式
	（d）从程式码着手认识作者独有的风格，进而见贤思齐
