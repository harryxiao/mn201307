

common/env_mmc.c

int env_init(void)
{
	/* use default */
	gd->env_addr	= (ulong)&default_environment[0];
	gd->env_valid	= 1;

	return 0;
}
gd->env_valid参数在start_armboot函数中的初始化函数例表中的env_init函数中设置

----------------
common/env_common.c

static uchar env_get_char_init(int index)
{
	/* if crc was bad, use the default environment */
	if (gd->env_valid)
		return env_get_char_spec(index);
	else
		return default_environment[index];
}

"*** Warning - bad CRC, using default environment"
env_import
|-> if (crc32(0, ep->data, ENV_SIZE) != crc) {
		set_default_env("!bad CRC");
		return 0;
	}

-----------------------
init_sequence_f [common/board_f.c]
|
V
env_init //initialize environment

-----------------------
init_sequence_r[]:  [common/board_r.c]
|
V
initr_env [board_r.c]
|
V
if (should_load_env())
	env_relocate();
|
V
env_relocate:[env_common.c]

	if (gd->env_valid == 0) {
#if defined(CONFIG_ENV_IS_NOWHERE) || defined(CONFIG_SPL_BUILD)
		/* Environment not changable */
		set_default_env(NULL);
#else
		bootstage_error(BOOTSTAGE_ID_NET_CHECKSUM);
		set_default_env("!bad CRC");
#endif

	} else { // env_init: gd->env_valid = 1;
		env_relocate_spec();
	}
|
V
env_relocate_spec:[env_mmc.c]
|
V
env_import(buf, 1);
------------------


