#ifndef VXC7027_AR0144_H
#define VXC7027_AR0144_H

struct xc_regval {
	u16 u16RegAddr;
	u8 u8Val;
};

struct ar_regval {
	u16 u16RegAddr;
	u16 u16Val;
};

struct xc_regval bypass_on_regs[] = {
	{0xfffd,0x80},
	{0xfffe,0x50},
	{0x004d,0x01},
};

struct xc_regval bypass_off_regs[] = {
	{0xfffd,0x80},
	{0xfffe,0x50},
	{0x004d,0x00},
};

struct xc_regval XC7027_default_regs[] = {
	//Y
	// XC7027 setting_1280x720
	{0xfffd, 0x80},
	{0xfffe, 0x50},
	{0x001c, 0xff},
	{0x001d, 0xff},
	{0x001e, 0xff},
	{0x001f, 0xff},
	{0x0018, 0x00},
	{0x0019, 0x00},
	{0x001a, 0x00},
	{0x001b, 0x00},
	{0x00bc, 0x19},

	{0x0030, 0x44},
	{0x0031, 0x94},
	{0x0032, 0x33},
	{0x0033, 0x70},
	{0x0020, 0x02},
	{0x0021, 0x0d},
	{0x0022, 0x01},
	{0x0023, 0x85},
	{0x0024, 0x09},
	{0x0025, 0x05},
	{0x0026, 0x01},
	{0x0027, 0x06},
	{0x0028, 0x03},
	{0x0029, 0x05},
	{0x002a, 0x01},
	{0x002b, 0x05},
	{0x002e, 0x01},

	{0xfffe, 0x50},
	{0x0050, 0x0f},//bit[0]:pwdn0 ;bit[1]:rst0
	{0x0054, 0x0f},//bit[2]:pwdn1 ;bit[3]:rst1
	{0x0058, 0x0f}, //GPIO

	{0x0090, 0x38},//ISP1 bit[1:0] 00:MIPI RX1;01:MIPI RX2;10:colorbar1;11:colorbar2
	{0x00a8, 0x09},//ISP2 bit[1:0] 00:MIPI RX1;01:MIPI RX2;10:colorbar1;11:colorbar2

	{0xfffe, 0x2e},
	{0x0000, 0x02},//RT1,RT2

	{0xfffe, 0x26},

	{0x8000, 0x2d},
	{0x8001, 0x00},
	{0x8002, 0x05},
	{0x8003, 0xd0},
	{0x8004, 0x02},

	{0x8010, 0x04},
	{0x8012, 0x00},
	{0x8013, 0x05},
	{0x8014, 0xd0},
	{0x8015, 0x02},
	{0x8016, 0x00},
	{0x8017, 0x00},
	{0x8018, 0x00},
	{0x8019, 0x00},

	{0xfffe, 0x30},
	{0x1900, 0x00},
	{0x1901, 0x00},
	{0x1902, 0x00},
	{0x1903, 0x00},
	{0x1904, 0x05},
	{0x1905, 0x00},
	{0x1906, 0x02},
	{0x1907, 0xd0},
	{0x1908, 0x00},

	{0xfffe, 0x2c},
	{0x0000, 0x81},//01
	{0x0001, 0x05},
	{0x0002, 0x00},
	{0x0004, 0x02},
	{0x0005, 0xd0},
	{0x0008, 0x11},
	{0x0044, 0x00},
	{0x0045, 0x04},
	{0x0048, 0x09},
	{0x0049, 0xF0},

	{0xfffe, 0x26},
	{0x2019, 0x05},
	{0x201a, 0x00},
	{0x201b, 0x02},
	{0x201c, 0xd0},
	{0x201d, 0x00},
	{0x201e, 0x00},
	{0x201f, 0x00},
	{0x2020, 0x00},

	{0x2015, 0x80},
	{0x2017, 0x1E},
	{0x2018, 0x00},
	{0x2023, 0x03},

	{0x0000, 0x20},
	{0x0009, 0xc4},

	{0xfffe, 0x30},

	{0x0000, 0x01},
	{0x0001, 0x00},
	{0x0002, 0x10},
	{0x0003, 0x20},
	{0x0004, 0x10},
	{0x0050, 0x20},
	{0x0019, 0x08},
	{0x005e, 0xff},
	{0x005f, 0x04},
	{0x0060, 0xcf},
	{0x0061, 0x02},
	{0x0064, 0x00},
	{0x0065, 0x05},
	{0x0066, 0xd0},
	{0x0067, 0x02},

	{0x0006, 0x05},
	{0x0007, 0x00},
	{0x0008, 0x02},
	{0x0009, 0xd0},
	{0x000a, 0x05},
	{0x000b, 0x00},
	{0x000c, 0x02},
	{0x000d, 0xd0},

	{0xfffe, 0x2e},
	{0x0003, 0x01},
	{0x0004, 0x00},

	//XC7027_Preview_end

	//patch start
	{0xfffe, 0x50},
	{0x000e, 0x54},

	{0xfffe, 0x14},
	{0x0006, 0x8 },
	{0x0007, 0xd7},
	{0x0014, 0x00},
	{0x0015, 0x14},
	{0x0016, 0x22},
	{0x0017, 0x80},
	{0x2114, 0x9c},
	{0x2115, 0x21},
	{0x2116, 0xff},
	{0x2117, 0xec},
	{0x2118, 0xd4},
	{0x2119, 0x1 },
	{0x211a, 0x48},
	{0x211b, 0x0 },
	{0x211c, 0xd4},
	{0x211d, 0x1 },
	{0x211e, 0x50},
	{0x211f, 0x4 },
	{0x2120, 0xd4},
	{0x2121, 0x1 },
	{0x2122, 0x60},
	{0x2123, 0x8 },
	{0x2124, 0xd4},
	{0x2125, 0x1 },
	{0x2126, 0x70},
	{0x2127, 0xc },
	{0x2128, 0xd4},
	{0x2129, 0x1 },
	{0x212a, 0x80},
	{0x212b, 0x10},
	{0x212c, 0x7 },
	{0x212d, 0xfb},
	{0x212e, 0x7 },
	{0x212f, 0xa3},
	{0x2130, 0x15},
	{0x2131, 0x0 },
	{0x2132, 0x0 },
	{0x2133, 0x0 },
	{0x2134, 0x85},
	{0x2135, 0xcb},
	{0x2136, 0x0 },
	{0x2137, 0x8 },
	{0x2138, 0x84},
	{0x2139, 0x6e},
	{0x213a, 0x1 },
	{0x213b, 0xc },
	{0x213c, 0xb8},
	{0x213d, 0x63},
	{0x213e, 0x0 },
	{0x213f, 0x41},
	{0x2140, 0xa4},
	{0x2141, 0xa3},
	{0x2142, 0xff},
	{0x2143, 0xff},
	{0x2144, 0xbc},
	{0x2145, 0x45},
	{0x2146, 0x0 },
	{0x2147, 0x1a},
	{0x2148, 0x10},
	{0x2149, 0x0 },
	{0x214a, 0x0 },
	{0x214b, 0x9 },
	{0x214c, 0xa9},
	{0x214d, 0x8b},
	{0x214e, 0x0 },
	{0x214f, 0x0 },
	{0x2150, 0x9c},
	{0x2151, 0xa0},
	{0x2152, 0x0 },
	{0x2153, 0x1b},
	{0x2154, 0xb8},
	{0x2155, 0x65},
	{0x2156, 0x0 },
	{0x2157, 0x7 },
	{0x2158, 0x9c},
	{0x2159, 0x80},
	{0x215a, 0x0 },
	{0x215b, 0x1b},
	{0x215c, 0x7 },
	{0x215d, 0xfb},
	{0x215e, 0x78},
	{0x215f, 0x23},
	{0x2160, 0x9e},
	{0x2161, 0x0 },
	{0x2162, 0x0 },
	{0x2163, 0xd },
	{0x2164, 0x0 },
	{0x2165, 0x0 },
	{0x2166, 0x0 },
	{0x2167, 0x18},
	{0x2168, 0xa5},
	{0x2169, 0x4b},
	{0x216a, 0xff},
	{0x216b, 0xff},
	{0x216c, 0xbc},
	{0x216d, 0xa5},
	{0x216e, 0x0 },
	{0x216f, 0xff},
	{0x2170, 0x10},
	{0x2171, 0x0 },
	{0x2172, 0x0 },
	{0x2173, 0x5 },
	{0x2174, 0xbc},
	{0x2175, 0xa5},
	{0x2176, 0x0 },
	{0x2177, 0x7f},
	{0x2178, 0xb9},
	{0x2179, 0x45},
	{0x217a, 0x0 },
	{0x217b, 0x41},
	{0x217c, 0x0 },
	{0x217d, 0x0 },
	{0x217e, 0x0 },
	{0x217f, 0x12},
	{0x2180, 0x9e},
	{0x2181, 0x0 },
	{0x2182, 0x0 },
	{0x2183, 0x40},
	{0x2184, 0xc },
	{0x2185, 0x0 },
	{0x2186, 0x0 },
	{0x2187, 0x9 },
	{0x2188, 0xa9},
	{0x2189, 0x45},
	{0x218a, 0x0 },
	{0x218b, 0x0 },
	{0x218c, 0xbc},
	{0x218d, 0xa5},
	{0x218e, 0x0 },
	{0x218f, 0x3f},
	{0x2190, 0x10},
	{0x2191, 0x0 },
	{0x2192, 0x0 },
	{0x2193, 0x8 },
	{0x2194, 0xbc},
	{0x2195, 0xa5},
	{0x2196, 0x0 },
	{0x2197, 0x1f},
	{0x2198, 0xe0},
	{0x2199, 0x65},
	{0x219a, 0x28},
	{0x219b, 0x0 },
	{0x219c, 0x9e},
	{0x219d, 0x0 },
	{0x219e, 0x0 },
	{0x219f, 0x20},
	{0x21a0, 0x0 },
	{0x21a1, 0x0 },
	{0x21a2, 0x0 },
	{0x21a3, 0x9 },
	{0x21a4, 0xa5},
	{0x21a5, 0x43},
	{0x21a6, 0xff},
	{0x21a7, 0xff},
	{0x21a8, 0x0 },
	{0x21a9, 0x0 },
	{0x21aa, 0x0 },
	{0x21ab, 0x7 },
	{0x21ac, 0x9e},
	{0x21ad, 0x0 },
	{0x21ae, 0x0 },
	{0x21af, 0x30},
	{0x21b0, 0x13},
	{0x21b1, 0xff},
	{0x21b2, 0xff},
	{0x21b3, 0xe9},
	{0x21b4, 0x15},
	{0x21b5, 0x0 },
	{0x21b6, 0x0 },
	{0x21b7, 0x0 },
	{0x21b8, 0xb8},
	{0x21b9, 0x65},
	{0x21ba, 0x0 },
	{0x21bb, 0x2 },
	{0x21bc, 0x9e},
	{0x21bd, 0x0 },
	{0x21be, 0x0 },
	{0x21bf, 0x10},
	{0x21c0, 0xa5},
	{0x21c1, 0x43},
	{0x21c2, 0xff},
	{0x21c3, 0xff},
	{0x21c4, 0x94},
	{0x21c5, 0x8e},
	{0x21c6, 0x0 },
	{0x21c7, 0xe8},
	{0x21c8, 0xa8},
	{0x21c9, 0xb0},
	{0x21ca, 0x0 },
	{0x21cb, 0x0 },
	{0x21cc, 0x7 },
	{0x21cd, 0xfb},
	{0x21ce, 0x6 },
	{0x21cf, 0xce},
	{0x21d0, 0xa8},
	{0x21d1, 0x6c},
	{0x21d2, 0x0 },
	{0x21d3, 0x0 },
	{0x21d4, 0x94},
	{0x21d5, 0x8e},
	{0x21d6, 0x0 },
	{0x21d7, 0xea},
	{0x21d8, 0xa8},
	{0x21d9, 0x6c},
	{0x21da, 0x0 },
	{0x21db, 0x0 },
	{0x21dc, 0x7 },
	{0x21dd, 0xfb},
	{0x21de, 0x6 },
	{0x21df, 0xca},
	{0x21e0, 0xa8},
	{0x21e1, 0xaa},
	{0x21e2, 0x0 },
	{0x21e3, 0x0 },
	{0x21e4, 0x85},
	{0x21e5, 0x21},
	{0x21e6, 0x0 },
	{0x21e7, 0x0 },
	{0x21e8, 0x85},
	{0x21e9, 0x41},
	{0x21ea, 0x0 },
	{0x21eb, 0x4 },
	{0x21ec, 0x85},
	{0x21ed, 0x81},
	{0x21ee, 0x0 },
	{0x21ef, 0x8 },
	{0x21f0, 0x85},
	{0x21f1, 0xc1},
	{0x21f2, 0x0 },
	{0x21f3, 0xc },
	{0x21f4, 0x86},
	{0x21f5, 0x1 },
	{0x21f6, 0x0 },
	{0x21f7, 0x10},
	{0x21f8, 0x44},
	{0x21f9, 0x0 },
	{0x21fa, 0x48},
	{0x21fb, 0x0 },
	{0x21fc, 0x9c},
	{0x21fd, 0x21},
	{0x21fe, 0x0 },
	{0x21ff, 0x14},
	{0x2200, 0x9c},
	{0x2201, 0x21},
	{0x2202, 0xff},
	{0x2203, 0xfc},
	{0x2204, 0xd4},
	{0x2205, 0x1 },
	{0x2206, 0x48},
	{0x2207, 0x0 },
	{0x2208, 0x7 },
	{0x2209, 0xfb},
	{0x220a, 0x7 },
	{0x220b, 0x6c},
	{0x220c, 0x15},
	{0x220d, 0x0 },
	{0x220e, 0x0 },
	{0x220f, 0x0 },
	{0x2210, 0x84},
	{0x2211, 0x8b},
	{0x2212, 0x0 },
	{0x2213, 0x8 },
	{0x2214, 0xa8},
	{0x2215, 0x6b},
	{0x2216, 0x0 },
	{0x2217, 0x0 },
	{0x2218, 0x84},
	{0x2219, 0xa4},
	{0x221a, 0x1 },
	{0x221b, 0x8 },
	{0x221c, 0xb8},
	{0x221d, 0xa5},
	{0x221e, 0x0 },
	{0x221f, 0x44},
	{0x2220, 0x94},
	{0x2221, 0x84},
	{0x2222, 0x0 },
	{0x2223, 0xc8},
	{0x2224, 0x7 },
	{0x2225, 0xfb},
	{0x2226, 0x6 },
	{0x2227, 0xb8},
	{0x2228, 0xa4},
	{0x2229, 0xa5},
	{0x222a, 0xff},
	{0x222b, 0xff},
	{0x222c, 0x85},
	{0x222d, 0x21},
	{0x222e, 0x0 },
	{0x222f, 0x0 },
	{0x2230, 0x44},
	{0x2231, 0x0 },
	{0x2232, 0x48},
	{0x2233, 0x0 },
	{0x2234, 0x9c},
	{0x2235, 0x21},
	{0x2236, 0x0 },
	{0x2237, 0x4 },
	{0x2238, 0x9c},
	{0x2239, 0x21},
	{0x223a, 0xff},
	{0x223b, 0xfc},
	{0x223c, 0xd4},
	{0x223d, 0x1 },
	{0x223e, 0x48},
	{0x223f, 0x0 },
	{0x2240, 0xbc},
	{0x2241, 0x3 },
	{0x2242, 0x4 },
	{0x2243, 0xb },
	{0x2244, 0x10},
	{0x2245, 0x0 },
	{0x2246, 0x0 },
	{0x2247, 0x6 },
	{0x2248, 0xbc},
	{0x2249, 0x3 },
	{0x224a, 0x4 },
	{0x224b, 0xc },
	{0x224c, 0xc },
	{0x224d, 0x0 },
	{0x224e, 0x0 },
	{0x224f, 0xa },
	{0x2250, 0x15},
	{0x2251, 0x0 },
	{0x2252, 0x0 },
	{0x2253, 0x0 },
	{0x2254, 0x0 },
	{0x2255, 0x0 },
	{0x2256, 0x0 },
	{0x2257, 0x6 },
	{0x2258, 0x15},
	{0x2259, 0x0 },
	{0x225a, 0x0 },
	{0x225b, 0x0 },
	{0x225c, 0x7 },
	{0x225d, 0xff},
	{0x225e, 0xff},
	{0x225f, 0xe9},
	{0x2260, 0x15},
	{0x2261, 0x0 },
	{0x2262, 0x0 },
	{0x2263, 0x0 },
	{0x2264, 0x0 },
	{0x2265, 0x0 },
	{0x2266, 0x0 },
	{0x2267, 0x4 },
	{0x2268, 0x15},
	{0x2269, 0x0 },
	{0x226a, 0x0 },
	{0x226b, 0x0 },
	{0x226c, 0x7 },
	{0x226d, 0xff},
	{0x226e, 0xff},
	{0x226f, 0xaa},
	{0x2270, 0x15},
	{0x2271, 0x0 },
	{0x2272, 0x0 },
	{0x2273, 0x0 },
	{0x2274, 0x85},
	{0x2275, 0x21},
	{0x2276, 0x0 },
	{0x2277, 0x0 },
	{0x2278, 0x44},
	{0x2279, 0x0 },
	{0x227a, 0x48},
	{0x227b, 0x0 },
	{0x227c, 0x9c},
	{0x227d, 0x21},
	{0x227e, 0x0 },
	{0x227f, 0x4 },
	{0x2280, 0x9c},
	{0x2281, 0x21},
	{0x2282, 0xff},
	{0x2283, 0xfc},
	{0x2284, 0xd4},
	{0x2285, 0x1 },
	{0x2286, 0x48},
	{0x2287, 0x0 },
	{0x2288, 0x7 },
	{0x2289, 0xff},
	{0x228a, 0xff},
	{0x228b, 0xec},
	{0x228c, 0x15},
	{0x228d, 0x0 },
	{0x228e, 0x0 },
	{0x228f, 0x0 },
	{0x2290, 0x9d},
	{0x2291, 0x60},
	{0x2292, 0x0 },
	{0x2293, 0x0 },
	{0x2294, 0x85},
	{0x2295, 0x21},
	{0x2296, 0x0 },
	{0x2297, 0x0 },
	{0x2298, 0x44},
	{0x2299, 0x0 },
	{0x229a, 0x48},
	{0x229b, 0x0 },
	{0x229c, 0x9c},
	{0x229d, 0x21},
	{0x229e, 0x0 },
	{0x229f, 0x4 },

	{0xfffe, 0x50},
	{0x0137, 0x99},

	//patch end
	///////////////ISP0 AE //////////////

	{0xfffe, 0x30},   // AE_avg

	{0x1f00, 0x00},   // WIN start X
	{0x1f01, 0xc8},
	{0x1f02, 0x00},   // WIN stat Y
	{0x1f03, 0xb4},
	{0x1f04, 0x03},   // WIN width
	{0x1f05, 0x60},
	{0x1f06, 0x02},   // WIN height
	{0x1f07, 0x1a},
	{0x1f08, 0x03},

	{0x0051, 0x03},
	/////////////////////////////////////////////////////
	/////////////////////   AE SENSOR     ///////////////
	/////////////////////////////////////////////////////
	{0xfffe, 0x14},
	{0x000e, 0x00},
	{0x010e, 0x20},  	//camera i2c id
	{0x010f, 0x02},  	//camera i2c bits
	{0x0110, 0x05},  	//sensor type gain
	{0x0111, 0x05},  	//sensor type exposure

	//exposure
	{0x0114, 0x30},  //write camera exposure variable [19:16]
	{0x0115, 0x12},
	{0x0116, 0x00},  //write camera exposure variable [15:8]
	{0x0117, 0x00},
	{0x0118, 0x00},  //write camera exposure variable [7:0]
	{0x0119, 0x00},

	{0x011c, 0xff},  //camera exposure addr mask 1
	{0x011d, 0xff},
	{0x011e, 0x00},  //camera exposure addr mask 2
	{0x011f, 0x00},
	{0x0120, 0x00},  //camera exposure addr mask 3
	{0x0121, 0x00},

	//gain
	{0x0134, 0x30},  //camera gain addr
	{0x0135, 0x60},
	{0x0136, 0x30},
	{0x0137, 0x5e},
	{0x0138, 0x00},
	{0x0139, 0x00},

	{0x013c, 0xff},  //camera gain addr mask 1
	{0x013d, 0xff},
	{0x013e, 0xff},  //camera gain addr mask 2
	{0x013f, 0xff},
	{0x0140, 0x00},  //camera gain addr mask 3
	{0x0141, 0x00},

	{0x0144, 0x02},   //expo delay frame
	{0x0145, 0x01},   //gain delay frame

	{0x0031, 0x01},//1:帧前；2:帧后
	{0x0032, 0x01},//1:帧前；2:帧后
	/////////////////////////////////////////////////////
	////////////////// 3.  AE NORMAL     ////////////////
	/////////////////////////////////////////////////////
	{0xfffe, 0x14},

	{0x004c, 0x00},
	{0x002b, 0x01},    //ae enable
	{0x004d, 0x01},    //ae Force write

	{0x00fa, 0x00},   //max gain
	{0x00fb, 0xc0},
	{0x00fc, 0x00},
	{0x00fd, 0x20},  //min gain

	{0x00e2, 0x08},   //max exp,low to 1/5
	{0x00e3, 0x90},
	{0x00de, 0x00},
	{0x00df, 0x10},   //min exp

	{0x00a0, 0x02},  //day target
	{0x00a1, 0x20},

	//flicker
	{0x0104, 0x00},
	{0x0105, 0x01}, //0开
	{0x0106, 0x00},
	{0x0107, 0x10},
	{0x0108, 0x00},  //4
	{0x0109, 0x10}, //30

	//weight
	{0x0055, 0x04},
	{0x0056, 0x04},
	{0x0057, 0x08},
	{0x0058, 0x04},
	{0x0059, 0x04},

	{0x005a, 0x04},
	{0x005b, 0x08},
	{0x005c, 0x10},
	{0x005d, 0x08},
	{0x005e, 0x04},

	{0x005f, 0x08},
	{0x0060, 0x10},
	{0x0061, 0x20},
	{0x0062, 0x10},
	{0x0063, 0x08},

	{0x0064, 0x04},
	{0x0065, 0x08},
	{0x0066, 0x10},
	{0x0067, 0x08},
	{0x0068, 0x04},

	{0x0069, 0x04},
	{0x006a, 0x04},
	{0x006b, 0x08},
	{0x006c, 0x04},
	{0x006d, 0x04},

	{0x0088, 0x00},
	{0x0089, 0x47},
	{0x008a, 0x3c},
	{0x008b, 0x00},

	{0x0050, 0x01},

	//AE SPEED
	{0x00c6, 0x02},     // delay frame

	{0x00ca, 0x00},    //1. threshold low
	{0x00cb, 0x60},

	{0x01bc, 0x00},
	{0x01bd, 0x60},   //thr_l_all

	{0x01be, 0x00},
	{0x01bf, 0x40},   //thr_l_avg

	{0x00cc, 0x00},    //2. threshold high
	{0x00cd, 0x80},

	{0x00c7, 0x20},    //3. finally thr

	{0x00d8, 0x80},    //4.stable thr_h

	{0x00c8, 0x01},     //total speed
	//0x0208,0x01,    //limint speed

	{0x00da, 0x00},
	{0x00db, 0x80},    //lumadiffthrlow

	{0x00dc, 0x03},
	{0x00dd, 0xc0},    //lumadiffthrhigh

	//0x00d6,0x00,
	//0x00d7,0x60,  //maxjumpratio
	//0x00d9,0x03,  //jumpcntmax
	//AE SMART

	{0x0092, 0x00},
	{0x0093, 0x00},
	{0x0094, 0x00},

	{0x00ad, 0x03},
	{0x00ac, 0x02},

	//////////////////// Table   ////////////////////////
	//Exposure value   (BASE)
	{0x0022, 0x3c},  //fps

	{0x01e4, 0x00},   // Exp value Table
	{0x01e5, 0x00},
	{0x01e6, 0x0f},
	{0x01e7, 0x19},  //table0

	{0x01e8, 0x00},
	{0x01e9, 0x00},
	{0x01ea, 0x2d},
	{0x01eb, 0x4c},   //table1

	{0x01ec, 0x00},
	{0x01ed, 0x00},
	{0x01ee, 0x78},
	{0x01ef, 0xcc},    //table2

	{0x01f0, 0x00},
	{0x01f1, 0x00},
	{0x01f2, 0xf1},
	{0x01f3, 0x99},    //table3

	{0x01f4, 0x00},
	{0x01f5, 0x01},
	{0x01f6, 0xe3},
	{0x01f7, 0x33},   //table4

	{0x01f8, 0x00},
	{0x01f9, 0x07},
	{0x01fa, 0x8c},
	{0x01fb, 0xcc},  //table5

	//ref target
	{0x00b2, 0x01},   // ref target table  0
	{0x00b3, 0x20},
	{0x00b4, 0x01},   // ref target table  1
	{0x00b5, 0x20},
	{0x00b6, 0x01},   // ref target table  2
	{0x00b7, 0x00},
	{0x00b8, 0x01},   // ref target table  3
	{0x00b9, 0x00},
	{0x00ba, 0x00},   // ref target table  4
	{0x00bb, 0xd0},
	{0x00bc, 0x00},   // ref target table  5
	{0x00bd, 0xa0},

	//over exposure offset table
	{0x01d6, 0x0d},
	{0x01d7, 0x0e},
	{0x01d8, 0x18},
	{0x01d9, 0x22},
	{0x01da, 0x2a},

	//main bodyratio table, look in 0x99
	{0x01dc, 0x40},
	{0x01dd, 0x30},
	{0x01de, 0x20},
	{0x01df, 0x10},
	{0x01e0, 0x00},
	{0x01e1, 0x00},

	////////////////////////  AVG   //////////////////
	{0x1cd,  0x28},  // avg affect val
	{0x1cb,  0x00},  // avg thr_l
	{0x1cc,  0x60},  // avg thr_h
	///////////////////  /Variance  /////////////////
	{0x1b1,  0x28},  // variance affect

	{0x1b2,  0x01},  // thr l
	{0x1b3,  0x00},
	{0x1b4,  0x08},  // thr h
	{0x1b5,  0x00},
	///////////////////////  PDFH ///////////////////
	{0x1c7,  0x06},   // PDFH_MAX
	{0x1c9,  0x02},   // PDFH_Target

	{0x1d1,  0x60},   // OE affect 0         //liu
	{0x1ca,  0x60},   // OE affect 1        //
	//////////////////  BRIGHT RATIO /////////////////
	{0x00be, 0x10},		//nHistLowThr_1
	{0x00bf, 0x08},		//nHistLowThr_2
	{0x00c0, 0x2c},		//nHistHighThr_1
	{0x00c1, 0x34},		//nHistHighThr_2

	{0x21d,  0x4 },   //PDFH_Brighten_thr
	{0x1b7,  0x0 },   //bright_pdfh_diff thr_l
	{0x1b8,  0x30},  //bright_pdfh_diff thr_m
	{0x1ba,  0x10},  //bright affect ratio

	{0xa6,   0x32}, // CDF_H
	{0xa7,   0x20}, // CDF_L
	{0x1c6,  0x30}, // nPDF_L Target
	{0x1d2,  0x08}, //hist under exp affect ratio
	{0x1b0,  0x40}, //PDF_L brighten max
	///////////////////  ATT BLOCK LIMIT /////////////////
	{0x16e,  0x02},
	{0x16f,  0x80},  //Max ATT thrshold
	{0x16c,  0x00},  //add liu
	{0x16d,  0x80},  //add liu

	{0x1d3,  0x02},   // Att limit ratio L  addliu
	{0x1d4,  0x0a},   // Att limit ratio H
	//////////////////// BLOCK LIMIT /////////////////////
	{0x16a,  0x03},  //MAX avg thrshold
	{0x16b,  0x00},

	{0x1d5,  0x10},  // global limit ratio

	{0x1a74, 0x02},//0&2,2frame write
	{0x0212, 0x00},

	//AE0  END
	{0xfffd, 0x80},
	{0xfffe, 0x30},
	{0x1400, 0x00},
	{0x1401, 0x00},
	{0x1402, 0x00},
	{0x1403, 0x00},
	{0x1404, 0x00},
	{0x1405, 0x00},
	{0x1406, 0x08},
	{0x1407, 0x10},
	{0x1408, 0x18},
	{0x1409, 0x1e},
	{0x140a, 0x24},
	{0x140b, 0x29},
	{0x140c, 0x2e},
	{0x140d, 0x33},
	{0x140e, 0x37},
	{0x140f, 0x3c},
	{0x1410, 0x40},
	{0x1411, 0x45},
	{0x1412, 0x4a},
	{0x1413, 0x4e},
	{0x1414, 0x53},
	{0x1415, 0x57},
	{0x1416, 0x5c},
	{0x1417, 0x60},
	{0x1418, 0x64},
	{0x1419, 0x69},
	{0x141a, 0x6d},
	{0x141b, 0x71},
	{0x141c, 0x75},
	{0x141d, 0x79},
	{0x141e, 0x7c},
	{0x141f, 0x80},
	{0x1420, 0x83},
	{0x1421, 0x8a},
	{0x1422, 0x8f},
	{0x1423, 0x94},
	{0x1424, 0x99},
	{0x1425, 0x9d},
	{0x1426, 0xa1},
	{0x1427, 0xa4},
	{0x1428, 0xa7},
	{0x1429, 0xaa},
	{0x142a, 0xac},
	{0x142b, 0xae},
	{0x142c, 0xb0},
	{0x142d, 0xb2},
	{0x142e, 0xb4},
	{0x142f, 0xb6},
	{0x1430, 0xb9},
	{0x1431, 0xbd},
	{0x1432, 0xc2},
	{0x1433, 0xc7},
	{0x1434, 0xcc},
	{0x1435, 0xd1},
	{0x1436, 0xd6},
	{0x1437, 0xda},
	{0x1438, 0xde},
	{0x1439, 0xe2},
	{0x143a, 0xe5},
	{0x143b, 0xe9},
	{0x143c, 0xed},
	{0x143d, 0xf1},
	{0x143e, 0xf6},
	{0x143f, 0xfb},
	{0x1440, 0xff},

	//ISP0 DNS
	//advance_raw_dns
	{0xfffe, 0x30},
	//0x0002,0x02,   //bit[1]advance_raw_dns_en

	{0x2000, 0x08},  //s0_sigma_0
	{0x2001, 0x0a},
	{0x2002, 0x0d},
	{0x2003, 0x20},
	{0x2004, 0x24},
	{0x2005, 0x24},  //s0_sigma_5

	{0x2006, 0x14},  //s0_Gsl_0
	{0x2007, 0x14},
	{0x2008, 0x12},
	{0x2009, 0x12},
	{0x200a, 0x10},
	{0x200b, 0x10},  //s0_Gsl_5

	{0x200c, 0x18},  //s0_RBsl_0
	{0x200d, 0x17},
	{0x200e, 0x16},
	{0x200f, 0x14},
	{0x2010, 0x12},
	{0x2011, 0x12},   //s0_RBsl_5

	{0x2012, 0x68},   //s0_ps00
	{0x2013, 0x68},
	{0x2014, 0x68},
	{0x2015, 0x68},
	{0x2016, 0x68},
	{0x2017, 0x68},   //s0_ps05

	{0x2018, 0x50},   //s0_ps10
	{0x2019, 0x50},
	{0x201a, 0x50},
	{0x201b, 0x50},
	{0x201c, 0x50},
	{0x201d, 0x50},  //s0_ps15

	{0x201e, 0x38},  //s0_ps20
	{0x201f, 0x38},
	{0x2020, 0x38},
	{0x2021, 0x38},
	{0x2022, 0x38},
	{0x2023, 0x38},   //s0_ps25

	{0x2024, 0x20},   //s0_ps30
	{0x2025, 0x20},
	{0x2026, 0x20},
	{0x2027, 0x20},
	{0x2028, 0x20},
	{0x2029, 0x20},   //s0_ps35

	{0x202a, 0x20},    //s0_pl00
	{0x202b, 0x20},
	{0x202c, 0x20},
	{0x202d, 0x20},
	{0x202e, 0x20},
	{0x202f, 0x20},   //s0_pl05

	{0x2030, 0x20},   //s0_pl10
	{0x2031, 0x20},
	{0x2032, 0x20},
	{0x2033, 0x20},
	{0x2034, 0x20},
	{0x2035, 0x20},   //s0_pl15

	{0x2036, 0x20},  //s0_pl20
	{0x2037, 0x20},
	{0x2038, 0x20},
	{0x2039, 0x20},
	{0x203a, 0x20},
	{0x203b, 0x20},   //s0_pl25

	{0x203c, 0x20},  //s0_pl30
	{0x203d, 0x20},
	{0x203e, 0x20},
	{0x203f, 0x20},
	{0x2040, 0x20},
	{0x2041, 0x20},   //s0_pl35

	{0x2044, 0x10},   //bit[4:0]thre_y

	//UV DNS
	{0xfffe, 0x30},
	//0x0002,0x04,   //bit[2]uv_dns_en
	{0x2100, 0x04},   //l_noise_list0
	{0x2101, 0x08},
	{0x2102, 0x0c},
	{0x2103, 0x10},
	{0x2104, 0x14},
	{0x2105, 0x18},   //l_noise_list5
	{0x2106, 0x5f},   //bit[7]l_noise_man_en; bit[6]l_sdw_ext_en; bit[4:0]l_sdw_ext_ns
	{0x2107, 0x08},   //l_noise_man

	//ISP0 CIP
	{0xfffe, 0x30},
	//0x0000,0x01,   //bit[0] cip_en
	{0x0f00, 0x27},   //bit[7:4] noise_y_slp  bit[3:0] Lsharp
	{0x0f02, 0x00},  //noise_list_0
	{0x0f03, 0x00},
	{0x0f04, 0x00},
	{0x0f05, 0x00},
	{0x0f06, 0x00},
	{0x0f07, 0x00},
	{0x0f08, 0x00},
	{0x0f09, 0x00},  //noise_list_7
	{0x0f0a, 0x0a},   //min_shp
	{0x0f0b, 0x28},   //max_shp
	{0x0f0c, 0x01},   //min_detail
	{0x0f0d, 0x02},   //max_detail
	{0x0f0e, 0x01},   //min_shp_gain
	{0x0f0f, 0x08},   //max_shp_gain

	//ISP0 DEFOG
	{0xfffe, 0x30},
	//0x0003,0x04,   //bit[2] defog_en
	{0x2b04, 0x08},   //bit[3:0]±￥oí?è????
	{0x2b16, 0x04},  //bit[3]pdf_avg_mode; bit[2]detail_enhance_en; bit[1]wdr_en; bit[0]:jdark_en
	{0xfffe, 0x14},
	{0x002f, 0x01},
	{0x09ab, 0x02},   //Gmax
	{0x09ac, 0x0c},   //map_rang[0]
	{0x09ad, 0xE0},   //map_rang[1]
	{0x09ae, 0x41},   //nzPDF64_num_thd
	{0x09af, 0xff},   //grayhigh    //bug￡?±?D?D′3é0xff
	{0x09b3, 0x38},   //gain_thd[7:0]
	{0x09b4, 0x10},   //Extratio
	{0x09b5, 0x14},   //Extratio max
	{0x09b6, 0x00},  //weak_adj_on  0x00:???ùoa￡?0x01:è??ùoa

	{0xfffe, 0x30},
	{0x2b9a, 0x00},  //gain0
	{0x2b9b, 0x00},
	{0x2b9c, 0x10},  //gain1
	{0x2b9d, 0x00},
	{0x2b9e, 0x20},  //gain2
	{0x2b9f, 0x00},
	{0x2ba0, 0x40},  //gain3
	{0x2ba1, 0x00},
	{0x2ba2, 0x80},  //gain4
	{0x2ba3, 0x00},
	{0x2ba4, 0xa0},  //gain5
	{0x2ba5, 0x00},
	{0x2ba6, 0xd0},  //gain6
	{0x2ba7, 0x00},
	{0x2ba8, 0x00},   //gain7
	{0x2ba9, 0x01},
	{0x2bac, 0x02},  //thd0
	{0x2bad, 0x04},
	{0x2bae, 0x06},
	{0x2baf, 0x08},
	{0x2bb0, 0x0d},
	{0x2bb1, 0x10},
	{0x2bb2, 0x14},
	{0x2bb3, 0x18},  //thd7
	{0x2bb4, 0x70},   //thd0_max
	{0x2bb5, 0x70},
	{0x2bb6, 0x70},
	{0x2bb7, 0x70},
	{0x2bb8, 0x70},
	{0x2bb9, 0x70},
	{0x2bba, 0x70},
	{0x2bbb, 0x70},   //thd7_max
	{0x2bbc, 0x2c},  //enhance_ratio0
	{0x2bbd, 0x2c},
	{0x2bbe, 0x28},
	{0x2bbf, 0x20},
	{0x2bc0, 0x18},
	{0x2bc1, 0x10},
	{0x2bc2, 0x08},
	{0x2bc3, 0x08},  //enhance_ratio7
	//defog end
	//isp0 top
	{0xfffe, 0x14},
	{0x002c, 0x01},   //isp0 awb_en
	{0x0030, 0x01},    //isp0 lenc_en
	{0x0620, 0x01},   //lenc mode
	{0x0621, 0x01},    //online mode

	{0xfffe, 0x30},
	{0x0000, 0x47},
	{0x0001, 0x82},
	{0x0002, 0x96},
	{0x0003, 0x35},
	{0x0004, 0x10},

	{0x0019, 0x09},
	{0x0051, 0x03},//ae
	{0x1700, 0x89},
	{0x1704, 0x22},
};

struct ar_regval ar0144_default_regs[] = {
	//AR0144 setting_1280*720
	//{0xffff, 200   },		//表示delay
	{0x301A, 0x00D9},
	//{0xffff, 200   },
	{0xffff, 50    },
	{0x3F4C, 0x4B3F}, // PIX_DEF_1D_DDC_LO_DEF
	{0x3F4C, 0x003F}, // PIX_DEF_1D_DDC_LO_DEF
	{0x3F4E, 0x5718}, // PIX_DEF_1D_DDC_HI_DEF
	{0x3F4E, 0x0018}, // PIX_DEF_1D_DDC_HI_DEF
	{0x3F50, 0x401F}, // PIX_DEF_1D_DDC_EDGE
	{0x3F50, 0x17DF}, // PIX_DEF_1D_DDC_EDGE
	{0xffff, 20    },
	{0x3ED6, 0x3CB5}, // DAC_LD_10_11
	{0x3ED8, 0x8765}, // DAC_LD_12_13
	{0x3EDA, 0x8888}, // DAC_LD_14_15
	{0x3EDC, 0x97FF}, // DAC_LD_16_17
	{0x3EF8, 0x6522}, // DAC_LD_44_45
	{0x3EFA, 0x2222}, // DAC_LD_46_47
	{0x3EFC, 0x6666}, // DAC_LD_48_49
	{0x3F00, 0xAA05}, // DAC_LD_52_53
	{0x3EE2, 0x180E}, // DAC_LD_22_23
	{0x3EE4, 0x0808}, // DAC_LD_24_25
	{0x3EEA, 0x2A09}, // DAC_LD_30_31
	{0x3060, 0x000D}, // ANALOG_GAIN
	{0x3092, 0x00CF}, // ROW_NOISE_CONTROL
	{0x3268, 0x0030}, // SEQUENCER_CONTROL
	{0x3786, 0x0006}, // DIGITAL_CTRL_1
	{0x3F4A, 0x0F70}, // DELTA_DK_PIX_THRES
	{0x306E, 0x4810}, // DATAPATH_SELECT
	{0x3064, 0x1802}, // SMIA_TEST
	{0x3EF6, 0x804D}, // DAC_LD_42_43
	{0x3180, 0xC08F}, // DELTA_DK_CONTROL
	{0x30BA, 0x7623}, // DIGITAL_CTRL
	{0x3176, 0x0480}, // DELTA_DK_ADJUST_GREENR
	{0x3178, 0x0480}, // DELTA_DK_ADJUST_RED
	{0x317A, 0x0480}, // DELTA_DK_ADJUST_BLUE
	{0x317C, 0x0480}, // DELTA_DK_ADJUST_GREENB

	{0x302A, 0x0006},	//VT_PIX_CLK_DIV = 6
	{0x302C, 0x0001},	//VT_SYS_CLK_DIV = 1
	{0x302E, 0x0002},	//PRE_PLL_CLK_DIV = 2
	{0x3030, 0x0022},	//PLL_MULTIPLIER = 34
	{0x3036, 0x000C},	//OP_PIX_CLK_DIV = 12
	{0x3038, 0x0001},	//OP_SYS_CLK_DIV = 1
	{0x30B0, 0x0038},// DIGITAL_TEST
	{0xffff, 10    },
	{0x31AE, 0x0202}, // SERIAL_FORMAT
	{0x31B0, 0x002D},		//FRAME_PREAMBLE = 45
	{0x31B2, 0x001B},		//LINE_PREAMBLE = 27
	{0x31B4, 0x1565},		//MIPI_TIMING_0 = 5477
	{0x31B6, 0x110D},		//MIPI_TIMING_1 = 4365
	{0x31B8, 0x2047},		//MIPI_TIMING_2 = 8263
	{0x31BA, 0x0105},		//MIPI_TIMING_3 = 261
	{0x31BC, 0x8004},		//MIPI_TIMING_4 = 32772

	{0x31AE, 0x0202},		//SERIAL_FORMAT = 514
	{0x3002, 0x0027},		//Y_ADDR_START = 40
	{0x3004, 0x0004},		//X_ADDR_START = 4
	{0x3006, 0x02F7},		//Y_ADDR_END = 759
	{0x3008, 0x0503},		//X_ADDR_END = 1283
	{0x300A, 0x0354},		//FRAME_LENGTH_LINES = 852
	{0x300C, 0x05d0},		//LINE_LENGTH_PCK = 1488
	{0x3012, 0x02F3},		//COARSE_INTEGRATION_TIME = 755
	{0x31AC, 0x0C0C},		//DATA_FORMAT_BITS = 3084
	{0x306E, 0x9010},		//DATAPATH_SELECT = 36880
	{0x30A2, 0x0001},		//X_ODD_INC = 1
	{0x30A6, 0x0001},		//Y_ODD_INC = 1
	{0x3082, 0x0003},		//OPERATION_MODE_CTRL = 3
	{0x3084, 0x0003},		//OPERATION_MODE_CTRL_CB = 3
	{0x308C, 0x0028},		//Y_ADDR_START_CB = 40
	{0x308A, 0x0004},		//X_ADDR_START_CB = 4
	{0x3090, 0x02F7},		//Y_ADDR_END_CB = 759
	{0x308E, 0x0503},		//X_ADDR_END_CB = 1283
	{0x30AA, 0x02F4},		//FRAME_LENGTH_LINES_CB = 756
	{0x303E, 0x05D0},		//LINE_LENGTH_PCK_CB = 1488
	{0x3016, 0x02F3},		//COARSE_INTEGRATION_TIME_CB = 755
	{0x30AE, 0x0001},		//X_ODD_INC_CB = 1
	{0x30A8, 0x0001},		//Y_ODD_INC_CB = 1
	{0x3040, 0x0000},		//READ_MODE = 0
	{0x31D0, 0x0001},		//COMPANDING = 1
	{0x301A, 0x005C},		 	// RESET_REGISTER
	{0xffff, 10    },
};

#endif
