如何阅读程序源代码？

阅读源代码的第一个工具，就是你手中的code base。把它编译出来，运行它，加log，试着
修改一些数据和代码，看看有什么变化。

第二个重要的工具就是debugger，而debugger最重要的功能是获取call stack。在你感兴趣
的use case里pause一下，在你不知道有什么用的函数里加个断点，显示出来的call stack
都能让你对系统有更清晰的认识。

一个软件系统就是一个小宇宙。别期待有什么高明的文档。要把自己当成探求自然真理的物理学家。

	1.必须找好切入点。你要解决什么问题。是要fix bug；还是要把这个系统和其它模块集成；还是
		要增加新功能。物理学家没有上来就研究整个宇宙的，必须选好分支。

	2.如果你有一个猜想，但是又和你的目标关联不太大，那就坚持这个猜想，直到出现明显反例。
		物理学有很多这样的例子，和数学不同，为了旁支猜想投入过多研究是不明智的。

	3.如果有明显证据证明你的某个旁支猜想大错特错，你就要放弃主要目标，暂时把解决旁支
		猜想作为主要目标。比如，你本来以为某个结构是LRU的cache，结果发现怎么做都不对，
		那就先放弃原来的目标，专门研究这个结构的用途。

	4.对于旁支猜想的不断切换，要做好自己的task stack保留。在旁支猜想解决之后，要根据
		结论尽快回到上次中断的任务。

复杂的软件系统更像一个动物，待久了你会了解它的脾性。有些是通过逻辑，有些是通过感觉。
玩车的尚且有这种感觉，我们玩的东西比车复杂上万倍，就更不能对它缺乏感情投入。
