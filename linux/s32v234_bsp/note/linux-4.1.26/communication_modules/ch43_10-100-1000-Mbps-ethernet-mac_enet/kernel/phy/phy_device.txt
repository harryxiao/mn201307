phy_device.c
----------------
phy/phy_device.c
* Framework for finding and configuring PHYs.
* Also contains generic PHY driver

subsys_initcall(phy_init);
                   |
+------------------+
|
|-> mdio_bus_init
|-> phy_drivers_register

-------------
mdio_bus_init //mdio_bus.c
|-> class_register(&mdio_bus_class);
|-> bus_register(&mdio_bus_type);

================================
static struct phy_driver genphy_driver[] = {
	{
		...
	 // Called to initialize the PHY,
	 // including after a reset
	.config_init	= genphy_config_init,
		...
	},
	{
	}

};

-----------


phy_init_hw //phy/phy_device.c
|-> phydev->drv->soft_reset(phydev);
|-> phy_scan_fixups(phydev);
|-> phydev->drv->config_init(phydev);

========================================
how to identify phy id?

get_phy_device //reads the specified PHY device and returns its @phy_device struct
//phy_device.c
|-> get_phy_id
|-> phy_device_create

----------------
//phy_device.c
phy_device_register - Register the phy device on the MDIO bus
|-> phydev->bus->phy_map[phydev->addr] = phydev;
|-> phy_scan_fixups
|-> device_add //add device to device hierarchy

========================================
how to select a phy when there are more than one phy?
